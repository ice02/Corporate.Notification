version: "3.7"
services:
  
  #mssql:
  #  image: mcr.microsoft.com/mssql/server:latest
  #  container_name: mssql
  #  hostname: mssql
  #  environment:
  #    - SA_PASSWORD=!Passw0rd!
  #    - ACCEPT_EULA=Y
    #  Known Issues - Mounting a volume does not work on Docker for Mac
    #volumes:
    #  - ~/storage/mssql:/var/opt/mssql
  #  ports:
  #    - "1433:1433"
  #  network_mode: "bridge"

  #Postgresql:
  #  image: posgres
  #  container_name: Postgresql
  #  hostname: posgresql
  #  environment:
  #    - "POSTGRES_PASSWORD=mysecretpassword"
  #  ports: 
  #    - "5432:5432"
  database:
    image: "postgres:latest"
    container_name: database
    ports:
      - 5432:5432
    network_mode: "bridge"
    environment:
      - POSTGRES_USER=postgres # The PostgreSQL user (useful to connect to the database)
      - POSTGRES_PASSWORD=mysecretpassword # The PostgreSQL password (useful to connect to the database)
      #- POSTGRES_DB=default_database # The PostgreSQL default database (automatically created at first launch)
    volumes:
      - ./db-data/:/var/lib/postgresql/data/

  redis:
    image: redis
    container_name: redis
    hostname: redis
    volumes:
      - "~/storage/redis:/data"
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    network_mode: "bridge"

  agentsmith:
    build: 
      context: ./Notification.Watcher
    container_name: agentsmith
    hostname: agentsmith
    environment:
      - ASPNETCORE_HOSTNAME=agentsmith
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "80:7000"
      - "443:7001"
    network_mode: "bridge"
    depends_on:
      - redis
      - database
    links:
      - redis:redis
      - database:database

  brain:
    build: 
      context: ./Notification.Brain
    #image: viniciusreis/corporate-chat:3.0
    container_name: brain
    hostname: brain
    environment:
      - ASPNETCORE_HOSTNAME=brain
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "6000:80"
      - "6001:443"
    network_mode: "bridge"
    links:
      - redis:redis
      - database:database
    depends_on:
      - redis
      - database
      - agentsmith

  engine:
    build: 
      context: ./Notification.Engine
    container_name: engine
    hostname: engine
    ports: 
      - "5000:5000"
      - "5001:5001"
    network_mode: "bridge"
    links:
      - redis:redis
      - database:database
    depends_on:
      - redis
      - database
      - agentsmith
      - brain

  #haproxy-webapp:
  #  build:
  #   context: ./Notification.Engine
  #   dockerfile: DockerfileHAProxy
  #  container_name: haproxy-webapp
  #  hostname: haproxy-webapp
  #  ports:
  #    - "5000:8080"
  #    - "20000:20000"
  #    - "5001:4443"
  #  network_mode: "bridge"
  #  links:
  #    - agentsmith:agentsmith
  #    - brain:brain
  #    - engine:engine
  #    - redis:redis
  #    - database:database
      
